#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЗаголовокОрганизация = НСтр("ru = 'Организация:'");
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПодготовитьФормуНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипОплатыПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ТипОплаты) Тогда
		ТипОплатыПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	КонтрагентПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОткрытие(Элемент, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ЗначенияЗаполнения = ЗначенияЗаполненияИзПараметровВыбора(Элементы.Контрагент);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Объект.Контрагент);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаОткрытие(Элемент, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ЗначенияЗаполнения = ЗначенияЗаполненияИзПараметровВыбора(Элементы.ДоговорКонтрагента);
	
	ЗначенияЗаполнения.Вставить("Владелец",    Объект.Контрагент);
	ЗначенияЗаполнения.Вставить("Организация", Объект.Организация);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Объект.ДоговорКонтрагента);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ПараметрыДоговора = Новый Структура;
	ПараметрыДоговора.Вставить("Организация", Объект.Организация);
	ПараметрыДоговора.Вставить("Владелец", Объект.Контрагент);
	ПараметрыДоговора.Вставить("ВидДоговора", ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
	
	РаботаСДоговорамиКонтрагентовБПКлиент.ДоговорОбработкаВыбора(Элемент, ВыбранноеЗначение, ПараметрыДоговора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	РаботаСДоговорамиКонтрагентовБПКлиент.ЗаполнитьСписокВыбора(Элемент, Текст, КонтрагентБезДоговоров, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключаемоеОборудованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СтруктураОтбора = Новый Структура("Организация, ТипОборудования", Объект.Организация, ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ЭквайринговыйТерминал"));
	
	ПараметрыФормыВыбора = Новый Структура("Отбор, Заголовок", СтруктураОтбора, НСтр("ru='Выберите эвайринговый терминал'", "ru") );
	ОткрытьФорму("Справочник.ПодключаемоеОборудование.Форма.ФормаВыбораИзСписка", ПараметрыФормыВыбора, Элементы.ПодключаемоеОборудование,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ВидимостьКомиссииБанка = Истина;
	ЗаголовокСчетаРасчетов = НСтр("ru = 'Счет расчетов:'");
	
	Если Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплат.Наличные") Тогда
		Элементы.ГруппаДополнительно.ТекущаяСтраница = Элементы.ГруппаНаличные;
	Иначе
		
		Элементы.ГруппаДополнительно.ТекущаяСтраница = Элементы.ГруппаБезналичнаяОплата;
		
		Если Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплат.ПлатежнаяКарта") Тогда
			Элементы.Контрагент.ПодсказкаВвода = "Банк-плательщик";
		ИначеЕсли Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплат.БанковскийКредит") Тогда
			Элементы.Контрагент.ПодсказкаВвода = "Банк-кредитор";
		ИначеЕсли Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплат.ПодарочныйСертификатСторонний") Тогда
			Элементы.Контрагент.ПодсказкаВвода = "Эмитент подарочных сертификатов";
			ВидимостьКомиссииБанка = Ложь;
		ИначеЕсли Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплат.ПодарочныйСертификатСобственный") Тогда
			Элементы.Контрагент.ПодсказкаВвода = "Обобщенный покупатель, например: ""Розничный покупатель"" или ""Частное лицо""";
			ВидимостьКомиссииБанка = Ложь;
			ЗаголовокСчетаРасчетов = НСтр("ru = 'Счет авансов:'");
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ГруппаБанковскаяКомиссия.Видимость = ВидимостьКомиссииБанка;
	Форма.ЗаголовокСчетРасчетов                 = ЗаголовокСчетаРасчетов;
	
	Элементы.ДоговорКонтрагента.Доступность     = ЗначениеЗаполнено(Объект.Организация)
		И ЗначениеЗаполнено(Объект.Контрагент);

КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	Если Параметры.Свойство("ТипОплатыДоступныеЗначения") Тогда
		Элементы.ТипОплаты.СписокВыбора.ЗагрузитьЗначения(Параметры.ТипОплатыДоступныеЗначения);
	ИначеЕсли ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
		
		Если Параметры.ЗначенияЗаполнения.Свойство("ТипОплаты") Тогда
			
			Элементы.ТипОплаты.СписокВыбора.Очистить();
			
			Если ТипЗнч(Параметры.ЗначенияЗаполнения.ТипОплаты) = Тип("ФиксированныйМассив") Тогда
			
				Для ИндексОтбора = 0 по Параметры.ЗначенияЗаполнения.ТипОплаты.Количество() - 1 Цикл
					
					Если Параметры.ЗначенияЗаполнения.ТипОплаты[ИндексОтбора] = Перечисления.ТипыОплат.ПлатежнаяКарта Тогда
						Элементы.ТипОплаты.СписокВыбора.Вставить(0, Параметры.ЗначенияЗаполнения.ТипОплаты[ИндексОтбора]);
					Иначе
						Элементы.ТипОплаты.СписокВыбора.Добавить(Параметры.ЗначенияЗаполнения.ТипОплаты[ИндексОтбора]);
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				Элементы.ТипОплаты.СписокВыбора.Добавить(Параметры.ЗначенияЗаполнения.ТипОплаты);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВестиУчетПоДоговорам = ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам");
	Элементы.ДекорацияДоговорКонтрагентаЗаголовок.Видимость = ВестиУчетПоДоговорам;
	УстановитьПараметрыВыбораКонтрагента();
	УстановитьПараметрыВыбораДоговора();
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()

	ДоступныеВидыДоговоров = Справочники.ВидыОплатОрганизаций.ВидыДоговоровПоТипуОплаты(Объект.ТипОплаты);
	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(Объект.ДоговорКонтрагента,
		Объект.Контрагент, Объект.Организация, ДоступныеВидыДоговоров);
		
	КонтрагентБезДоговоров = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.ДоговорКонтрагента) 
		И ДоступныеВидыДоговоров.Найти(Перечисления.ВидыДоговоровКонтрагентов.СПокупателем) <> Неопределено
		И РаботаСДоговорамиКонтрагентовБП.КонтрагентБезДоговоров(Объект.Организация, Объект.Контрагент) Тогда
		
		КонтрагентБезДоговоров = Истина;
		
	КонецЕсли;

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	ДоступныеВидыДоговоров = Справочники.ВидыОплатОрганизаций.ВидыДоговоровПоТипуОплаты(Объект.ТипОплаты);
	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(Объект.ДоговорКонтрагента,
		Объект.Контрагент, Объект.Организация, ДоступныеВидыДоговоров);
		
	КонтрагентБезДоговоров = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.ДоговорКонтрагента) 
		И ДоступныеВидыДоговоров.Найти(Перечисления.ВидыДоговоровКонтрагентов.СПокупателем) <> Неопределено
		И РаботаСДоговорамиКонтрагентовБП.КонтрагентБезДоговоров(Объект.Организация, Объект.Контрагент) Тогда
		
		КонтрагентБезДоговоров = Истина;
		
	КонецЕсли;

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура ТипОплатыПриИзмененииНаСервере()
	
	УстановитьПараметрыВыбораКонтрагента();
	УстановитьПараметрыВыбораДоговора();
	
	Если ЗначениеЗаполнено(Объект.Контрагент)
		И Объект.ТипОплаты = Перечисления.ТипыОплат.ПодарочныйСертификатСобственный Тогда
		
		// для собственных сертификатов контрагент может быть только физлицом
		ВидТекущегоКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Объект.Контрагент, "ЮридическоеФизическоеЛицо");
		
		Если ВидТекущегоКонтрагента <> Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			Объект.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
	ДоступныеВидыДоговоров = Справочники.ВидыОплатОрганизаций.ВидыДоговоровПоТипуОплаты(Объект.ТипОплаты);
	ВидТекущегоДоговора    = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДоговорКонтрагента, "ВидДоговора");
	Если ДоступныеВидыДоговоров.Найти(ВидТекущегоДоговора) = Неопределено Тогда
		Объект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(Объект.ДоговорКонтрагента,
		Объект.Контрагент, Объект.Организация, ДоступныеВидыДоговоров);
	
	УстановитьСчетУчетаРасчетовПоУмолчанию();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораКонтрагента()
	
	ДоступныеВидыКонтрагента = Новый Массив;
	ДоступныеВидыКонтрагента.Добавить(Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо);
	
	Если Объект.ТипОплаты <> Перечисления.ТипыОплат.ПодарочныйСертификатСобственный Тогда
		ДоступныеВидыКонтрагента.Добавить(Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
	КонецЕсли;
	
	ПараметрВыбораКонтрагента = Новый ПараметрВыбора(
		"Отбор.ЮридическоеФизическоеЛицо", Новый ФиксированныйМассив(ДоступныеВидыКонтрагента));
	
	НовыйМассивПараметров = Новый Массив;
	НовыйМассивПараметров.Добавить(ПараметрВыбораКонтрагента);
	
	Элементы.Контрагент.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассивПараметров);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораДоговора()
	
	ДоступныеВидыДоговоров    = Справочники.ВидыОплатОрганизаций.ВидыДоговоровПоТипуОплаты(Объект.ТипОплаты);
	ПараметрВыбораВидДоговора = Новый ПараметрВыбора("Отбор.ВидДоговора", Новый ФиксированныйМассив(ДоступныеВидыДоговоров));
	
	ПараметрВыбораВалютный = Новый ПараметрВыбора("Отбор.Валютный", Ложь);
	
	НовыйМассивПараметров = Новый Массив;
	НовыйМассивПараметров.Добавить(ПараметрВыбораВидДоговора);
	НовыйМассивПараметров.Добавить(ПараметрВыбораВалютный);
	
	Элементы.ДоговорКонтрагента.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассивПараметров);
	
	КонтрагентБезДоговоров = ДоступныеВидыДоговоров.Найти(Перечисления.ВидыДоговоровКонтрагентов.СПокупателем) <> Неопределено
		И РаботаСДоговорамиКонтрагентовБП.КонтрагентБезДоговоров(Объект.Организация, Объект.Контрагент);
	
КонецПроцедуры

&НаКлиенте
Функция ЗначенияЗаполненияИзПараметровВыбора(Элемент)

	ЗначенияЗаполнения = Новый Структура;
	
	ПараметрыВыбораПоля = Новый Массив(Элемент.ПараметрыВыбора);
	Для каждого ПараметрВыбора Из ПараметрыВыбораПоля Цикл
		Если СтрНайти(ПараметрВыбора.Имя, "Отбор.") > 0 Тогда
			ИмяОтбора = СтрЗаменить(ПараметрВыбора.Имя, "Отбор.", "");
			ЗначенияЗаполнения.Вставить(ИмяОтбора, ПараметрВыбора.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЗначенияЗаполнения;

КонецФункции

&НаСервере
Процедура УстановитьСчетУчетаРасчетовПоУмолчанию()
	
	Объект.СчетУчетаРасчетов = Справочники.ВидыОплатОрганизаций.СчетУчетаРасчетовПоУмолчанию(Объект.ТипОплаты);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	Если КонтрагентБезДоговоров И ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		 КонтрагентБезДоговоров = Ложь;
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти